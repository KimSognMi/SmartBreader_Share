package com.test;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Iterator;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

/**
 * Servlet implementation class UploadServlet
 */
@WebServlet("/UploadServlet")
public class UploadServlet extends HttpServlet {

	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	
		 
		// request.setCharacterEncoding("UTF-8");   // multipart인 경우에는 무의미하다.


		 System.out.println("Content Type ="+request.getContentType());
		 System.out.println("theText ="+request.getParameter("theText"));
		 
		 
		 DiskFileItemFactory factory = new DiskFileItemFactory();

		// Configure a repository (to ensure a secure temp location is used)
		ServletContext ctx =getServletContext();
		File repository = (File) ctx.getAttribute("javax.servlet.context.tempdir"); // new File("c://temp") 임시파일 경로
		factory.setRepository(repository);

		
		 ServletFileUpload upload = new ServletFileUpload(factory);
	        // If file size exceeds, a FileUploadException will be thrown
		 upload.setSizeMax(1024*1024*5); //업로드 되는 전체 파일크기 제한
		 upload.setFileSizeMax(1024*1024*2); // 개별 파일의 max값 제한

	        List fileItems = null;
			try {
				fileItems = upload.parseRequest(request);
				System.out.println(">>>"+fileItems);
			} catch (FileUploadException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
	        Iterator<FileItem> itr = fileItems.iterator();
	        String fileName = null;
	        
	        while(itr.hasNext()) {
	          FileItem fi = itr.next();

	          if( !fi.isFormField() ) { // input type="file" 인 경우
	        	  fileName = fi.getName();
	            System.out.println("\nNAME: "+fi.getName());
	            System.out.println("SIZE: "+fi.getSize());
	           
	            File fullFile  = new File(fi.getName());  
	        		File fNew = new File(ctx.getRealPath("/"),fullFile.getName());
	            System.out.println("fNew >> " + fNew.getPath());
	            System.out.println(fNew.getAbsolutePath());
	            try {
					fi.write(fNew);
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	          }else { // input type="file" 아닌 경우
	            System.out.println("Field ="+fi.getFieldName()+"\t"+fi.getString("UTF-8"));
	          }
	        }//end while
		
	        response.setContentType("text/html;charset=UTF-8");
	        PrintWriter out = response.getWriter();
	        out.print("<html><body>");
	        out.print("파일명: <a href='FileDown?fileName="+fileName+"'>"+ fileName+"</a>" );
	        
	        out.print("</body></html");
	        
	        
	        
	}//end doPost

}//end class
